{"version":3,"file":"component---src-templates-blog-js-f2675d3e1bca0ff1e32e.js","mappings":"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","sources":["webpack://sylvaindenyse.me/./node_modules/gatsby-plugin-mdx/index.js","webpack://sylvaindenyse.me/./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://sylvaindenyse.me/./node_modules/prism-react-renderer/prism/index.js","webpack://sylvaindenyse.me/./node_modules/prism-react-renderer/dist/index.js","webpack://sylvaindenyse.me/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://sylvaindenyse.me/./node_modules/prism-react-renderer/themes/oceanicNext/index.js","webpack://sylvaindenyse.me/./src/components/CodeBlock.js","webpack://sylvaindenyse.me/./src/components/Aside.js","webpack://sylvaindenyse.me/./src/templates/blog.js","webpack://sylvaindenyse.me/./src/components/ExternalLink.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/construct.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/typeof.js","webpack://sylvaindenyse.me/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\n\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0;\n\n  // The grammar object for plaintext\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n        return obj['__id'];\n      },\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = /** @type {Record<string, any>} */{};\n            visited[id] = clone;\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n            return (/** @type {any} */clone\n            );\n          case 'Array':\n            id = _.util.objId(o);\n            if (visited[id]) {\n              return visited[id];\n            }\n            clone = [];\n            visited[id] = clone;\n            /** @type {Array} */ /** @type {any} */o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (/** @type {any} */clone\n            );\n          default:\n            return o;\n        }\n      },\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element) {\n          var m = lang.exec(element.className);\n          if (m) {\n            return m[1].toLowerCase();\n          }\n          element = element.parentElement;\n        }\n        return 'none';\n      },\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function setLanguage(element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n        // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n        element.classList.add('language-' + language);\n      },\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n        while (element) {\n          var classList = element.classList;\n          if (classList.contains(className)) {\n            return true;\n          }\n          if (classList.contains(no)) {\n            return false;\n          }\n          element = element.parentElement;\n        }\n        return !!defaultActivation;\n      }\n    },\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n        return lang;\n      },\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root || /** @type {any} */_.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n        var ret = {};\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            }\n\n            // Do not insert token which also occur in insert. See #1525\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n        var old = root[inside];\n        root[inside] = ret;\n\n        // Update references in other language definitions\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n            var propertyType = _.util.type(property);\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n      _.hooks.run('before-tokenize', env);\n      env.tokens = _.tokenize(env.code, env.grammar);\n      _.hooks.run('after-tokenize', env);\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n        delete grammar.rest;\n      }\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  };\n\n  // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n    this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || '').length | 0;\n  }\n\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n    _.hooks.run('wrap', env);\n    var attributes = '';\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n    return match;\n  }\n\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n\n        /** @type {RegExp} */\n        var pattern = patternObj.pattern || patternObj;\n        for (\n        // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n          var str = currentNode.value;\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n          if (str instanceof Token) {\n            continue;\n          }\n          var removeCount = 1; // this is the to parameter of removeBetween\n          var match;\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n            if (!match || match.index >= text.length) {\n              break;\n            }\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos;\n\n            // find the node that contains the match\n            p += currentNode.value.length;\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            }\n            // adjust pos (and p)\n            p -= currentNode.value.length;\n            pos = p;\n\n            // the current node is a Token, then the match starts inside another Token, which is invalid\n            if (currentNode.value instanceof Token) {\n              continue;\n            }\n\n            // find the last node which is affected by this match\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n            removeCount--;\n\n            // replace with the new match\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n            if (!match) {\n              continue;\n            }\n          }\n\n          // eslint-disable-next-line no-redeclare\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n          var removeFrom = currentNode.prev;\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n            // the reach might have been extended because of the rematching\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n\n    /** @type {LinkedListNode<T>} */\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n    this.tail = tail;\n    this.length = 0;\n  }\n\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n  function removeRange(list, node, count) {\n    var next = node.next;\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n    return array;\n  }\n  return _;\n}();\nvar prism = Prism;\nPrism.default = Prism;\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n  };\n\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [\n    // [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    },\n    // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    },\n    // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [\n    // a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [\n    // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    },\n    // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    },\n    // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    },\n    // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n    // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n    // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' +\n      // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' +\n      // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n      }\n    },\n\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + (\n    // constant\n    /NaN|Infinity/.source + '|' +\n    // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' +\n    // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' +\n    // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' +\n    // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' +\n    // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [\n    // Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n        },\n\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n    var codeLang = '';\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n    var grammar = Prism.languages[codeLang];\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n      if (code[0] === '#') {\n        var value;\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n        if (known) {\n          return known;\n        } // unable to decode\n\n        return m;\n      }\n    });\n    return text;\n  }\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n    aliases.push(alias);\n  }\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n        currentIndex = definitionEnd + 1;\n      }\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n  Prism.languages.javascript['template-string'] = [\n  // styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),\n  // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n  // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source),\n  // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source),\n  // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),\n  // sql`...`\n  createTemplate('sql', /\\bsql/.source),\n  // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n        var token = tokens[i];\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token : /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n            if (before) {\n              replacement.push(before);\n            }\n            replacement.push(middle);\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        if (typeof token === 'string') {\n          continue;\n        }\n        var content = token.content;\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n          continue;\n        }\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n  // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n  // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n    if (typeof token === 'string') {\n      return token;\n    }\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n    return token.content.map(stringifyToken).join('');\n  };\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [\n    // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n    // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m,\n    // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [\n  // binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n  // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n  // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n            var token = tokens[i];\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n                replacement.push(middle);\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */) {\n              walkTokens(token.content);\n            }\n          }\n          return tokens;\n        }\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [\n  // Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  },\n  // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [\n  // binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\n  // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\n  // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n    }\n  },\n\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [\n    // We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\nexport default prism;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  return target;\n}\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n      len = arguments.length;\n    while (len--) args[len] = arguments[len];\n    Component.apply(this, args);\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n      var themeDict = this$1.getThemeDict(this$1.props);\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n      if (key !== undefined) {\n        output.key = key;\n      }\n      if (className) {\n        output.className += \" \" + className;\n      }\n      return output;\n    });\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n      if (key !== undefined) {\n        output.key = key;\n      }\n      if (className) {\n        output.className += \" \" + className;\n      }\n      return output;\n    });\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n  return Highlight;\n}(Component);\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Oceanic Next\n// Author: Dmitri Voronianski (https://github.com/voronianski)\n// https://github.com/voronianski/oceanic-next-color-scheme\n// Adapted from: https://github.com/reactjs/reactjs.org/blob/428d52b/src/prism-styles.js\nvar colors = {\n  char: \"#D8DEE9\",\n  comment: \"#999999\",\n  keyword: \"#c5a5c5\",\n  primitive: \"#5a9bcf\",\n  string: \"#8dc891\",\n  variable: \"#d7deea\",\n  boolean: \"#ff8b50\",\n  punctuation: \"#5FB3B3\",\n  tag: \"#fc929e\",\n  function: \"#79b6f2\",\n  className: \"#FAC863\",\n  method: \"#6699CC\",\n  operator: \"#fc929e\"\n};\nvar theme = {\n  plain: {\n    backgroundColor: \"#282c34\",\n    color: \"#ffffff\"\n  },\n  styles: [{\n    types: [\"attr-name\"],\n    style: {\n      color: colors.keyword\n    }\n  }, {\n    types: [\"attr-value\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"comment\", \"block-comment\", \"prolog\", \"doctype\", \"cdata\", \"shebang\"],\n    style: {\n      color: colors.comment\n    }\n  }, {\n    types: [\"property\", \"number\", \"function-name\", \"constant\", \"symbol\", \"deleted\"],\n    style: {\n      color: colors.primitive\n    }\n  }, {\n    types: [\"boolean\"],\n    style: {\n      color: colors.boolean\n    }\n  }, {\n    types: [\"tag\"],\n    style: {\n      color: colors.tag\n    }\n  }, {\n    types: [\"string\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"punctuation\"],\n    style: {\n      color: colors.string\n    }\n  }, {\n    types: [\"selector\", \"char\", \"builtin\", \"inserted\"],\n    style: {\n      color: colors.char\n    }\n  }, {\n    types: [\"function\"],\n    style: {\n      color: colors.function\n    }\n  }, {\n    types: [\"operator\", \"entity\", \"url\", \"variable\"],\n    style: {\n      color: colors.variable\n    }\n  }, {\n    types: [\"keyword\"],\n    style: {\n      color: colors.keyword\n    }\n  }, {\n    types: [\"atrule\", \"class-name\"],\n    style: {\n      color: colors.className\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      fontWeight: \"400\"\n    }\n  }, {\n    types: [\"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }]\n};\nexport default theme;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Highlight, { defaultProps } from 'prism-react-renderer'\nimport theme from 'prism-react-renderer/themes/oceanicNext'\nimport styled from '@emotion/styled'\n\nconst CodeBlock = ({ children }) => {\n  const className = children.props.className || ''\n  const matches = className.match(/language-(?<lang>.*)/)\n  const language =\n    matches && matches.groups && matches.groups.lang ? matches.groups.lang : ''\n\n  return (\n    <Highlight\n      {...defaultProps}\n      code={children.props.children.trim()}\n      language={language}\n      theme={theme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <Wrapper>\n          {language ? <Hint>{language}</Hint> : null}\n          <pre className={className} style={{ ...style, padding: '20px' }}>\n            {tokens.map((line, i) => (\n              <div key={i} {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </pre>\n        </Wrapper>\n      )}\n    </Highlight>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: ${48 / 19}rem 0 1rem 0;\n\n  pre {\n    margin: 0;\n    white-space: break-spaces;\n    border-radius: 6px;\n  }\n`\nconst Hint = styled.span`\n  position: absolute;\n  top: 0;\n  left: 40px;\n  display: flex;\n  align-items: center;\n  min-height: 32px;\n  padding: 0 16px;\n  font-size: ${14 / 19}rem;\n\n  font-weight: var(--font-weight-medium);\n  text-transform: uppercase;\n  background-color: rgb(40, 44, 52);\n  border-radius: 8px 8px 0 0;\n\n  transform: translateY(-100%);\n`\n\nCodeBlock.propTypes = {\n  children: PropTypes.node,\n}\nexport default CodeBlock\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport PropTypes from 'prop-types'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCircleInfo } from '@fortawesome/free-solid-svg-icons'\n\nconst Aside = ({ children, ...delegated }) => (\n  <Wrapper {...delegated}>\n    <span>\n      <FontAwesomeIcon icon={faCircleInfo} />\n    </span>\n    <Content>{children}</Content>\n  </Wrapper>\n)\n\nconst Wrapper = styled.aside`\n  display: grid;\n  grid-template-columns: 32px 1fr;\n  align-items: baseline;\n  margin-left: 32px;\n  font-style: italic;\n`\n\nconst Content = styled.p`\n  margin: 0;\n`\n\nAside.propTypes = {\n  children: PropTypes.node,\n}\nexport default Aside\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { MDXProvider } from '@mdx-js/react'\nimport styled from '@emotion/styled'\nimport SEO from '../components/SEO'\nimport CodeBlock from '../components/CodeBlock'\nimport Aside from '../components/Aside'\nimport ExternalLink from '../components/ExternalLink'\n\nconst getTimeToRead = (words, wordsPerMinute = 110) =>\n  Math.round(words / wordsPerMinute) || 1\n\nconst components = {\n  pre: CodeBlock,\n  aside: Aside,\n  a: ExternalLink,\n}\n\nconst Template = ({ data }) => {\n  const { mdx } = data\n  const {\n    frontmatter,\n    body,\n    wordCount: { words },\n    excerpt,\n  } = mdx\n  const timeToRead = getTimeToRead(words)\n\n  return (\n    <section>\n      <SEO title={frontmatter.title} article={true} description={excerpt} />\n      <Title>{frontmatter.title}</Title>\n      <Meta>\n        Publié le {frontmatter.date} · {timeToRead} minutes de lecture\n      </Meta>\n      <Article>\n        <MDXProvider components={components}>\n          <MDXRenderer localImages={frontmatter.embeddedImagesLocal}>\n            {body}\n          </MDXRenderer>\n        </MDXProvider>\n      </Article>\n    </section>\n  )\n}\n\nconst Title = styled.h1`\n  margin: 0;\n`\n\nconst Meta = styled.p`\n  font-style: italic;\n  font-weight: var(--font-weight-light);\n`\n\nconst Article = styled.article`\n  & > p {\n    margin-top: 1rem;\n\n    &:first-of-type {\n      margin-top: 2rem;\n    }\n  }\n\n  img,\n  video {\n    display: flex;\n    max-width: 100%;\n    margin: auto;\n  }\n\n  table {\n    position: relative;\n    max-width: 100%;\n    margin: auto;\n    border-collapse: collapse;\n\n    th,\n    td {\n      padding: 5px 8px;\n      text-align: center;\n      border: 1px solid var(--color-text);\n    }\n\n    caption {\n      font-size: ${16 / 19}rem;\n      font-style: italic;\n      opacity: 0.8;\n    }\n  }\n\n  blockquote {\n    position: relative;\n    font-style: italic;\n    font-weight: var(--font-weight-light);\n\n    &:before {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: -16px;\n      width: 4px;\n      content: '';\n      background-color: var(--color-background-light);\n    }\n  }\n\n  code {\n    padding: 0 2px;\n    margin: 0 -2px;\n    font-size: 0.9em;\n    color: orange;\n    background-color: var(--color-background-light);\n    border-radius: 10px;\n  }\n\n  .gatsby-image-wrapper.gatsby-image-wrapper-constrained {\n    display: block;\n    width: 100%;\n    margin-right: auto;\n    margin-left: auto;\n\n    img {\n      width: auto;\n    }\n  }\n`\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    mdx(frontmatter: { path: { eq: $slug } }) {\n      body\n      frontmatter {\n        date(formatString: \"DD MMMM YYYY\", locale: \"fr\")\n        path\n        title\n        embeddedImagesLocal {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED)\n          }\n        }\n      }\n      wordCount {\n        words\n      }\n      excerpt\n    }\n  }\n`\n\nTemplate.propTypes = {\n  data: PropTypes.shape({\n    mdx: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        date: PropTypes.string,\n        embeddedImagesLocal: PropTypes.array,\n      }),\n      body: PropTypes.string,\n      wordCount: PropTypes.shape({\n        words: PropTypes.number,\n      }),\n      excerpt: PropTypes.string,\n    }),\n  }),\n}\nexport default Template\n","import React from 'react'\n\nconst ExternalLink = props => <a target=\"_blank\" {...props} />\n\nexport default ExternalLink\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _construct.apply(null, arguments);\n}\nmodule.exports = _construct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["MDXRenderer","require","module","exports","React","mdx","useMDXScope","scope","children","props","mdxScope","End","useMemo","fullScope","keys","Object","values","map","key","Function","createElement","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","defineProperty","setPrototypeOf","Prism","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","alias","Array","isArray","replace","o","toString","call","slice","objId","obj","clone","deepClone","visited","id","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","className","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","text","txt","extend","redef","insertBefore","inside","before","insert","root","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlight","env","code","hooks","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","push","toArray","all","name","callbacks","length","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","apply","join","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","string","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","graphql","validTokens","filter","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","test","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","substring","middle","replacement","afterTokens","concat","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","theme","backgroundColor","color","styles","style","opacity","textDecorationLine","fontStyle","fontWeight","_defineProperty","enumerable","_extends","assign","target","arguments","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","len","undefined","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","colors","Wrapper","Hint","matches","groups","trim","padding","Content","components","pre","CodeBlock","aside","delegated","icon","faCircleInfo","a","Title","Meta","Article","data","frontmatter","body","words","wordCount","excerpt","timeToRead","wordsPerMinute","round","getTimeToRead","SEO","title","article","description","date","MDXProvider","localImages","embeddedImagesLocal","arr","arr2","__esModule","arrayLikeToArray","isNativeReflectConstruct","_construct","Parent","Class","Reflect","construct","bind","instance","toPropertyKey","sham","Proxy","iter","Symbol","iterator","excluded","sourceKeys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_typeof","input","hint","prim","toPrimitive","res","arg","minLen","n"],"sourceRoot":""}